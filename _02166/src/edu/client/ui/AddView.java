package edu.client.ui;

import java.util.List;

import com.google.gwt.event.dom.client.ClickEvent;
import com.google.gwt.event.dom.client.ClickHandler;
import com.google.gwt.user.client.Window;
import com.google.gwt.user.client.rpc.AsyncCallback;
import com.google.gwt.user.client.ui.Button;
import com.google.gwt.user.client.ui.Composite;
import com.google.gwt.user.client.ui.FlexTable;
import com.google.gwt.user.client.ui.Label;
import com.google.gwt.user.client.ui.TextBox;

import edu.shared.OperatoerDTO;

public class AddView extends Composite {
	private FlexTable ft = new FlexTable();
	Label lblID = new Label("ID - autogenerated");
	TextBox txtBoxID = new TextBox();
	Label lblNavn = new Label("Operatoer name");
	TextBox txtBoxNavn = new TextBox();
	Label lblIni = new Label("Initials");
	TextBox txtBoxIni = new TextBox();
	Label lblCPR = new Label("CPR#");
	TextBox txtBoxCPR = new TextBox();
	Label lblPass = new Label("Password");
	TextBox txtBoxPass = new TextBox();
	Label lblActive = new Label("ActiveStatus - set to 1 for opr or 2 for admin");
	TextBox txtBoxActive = new TextBox();

	public AddView(final MainView mainView) throws Exception{
		this.initWidget(ft);

		ft.setWidget(0,0,lblID);
		ft.setWidget(0,1,lblNavn);
		ft.setWidget(0,2,lblIni);
		ft.setWidget(0,3,lblCPR);
		ft.setWidget(0,4,lblPass);
		ft.setWidget(0,5,lblActive);

		//Here the ID is set to the next available ID made from list of opr
		//Txt box is disabled, so no editing is availble
		txtBoxID.setEnabled(false);
		mainView.getService().getOperatoerList(new AsyncCallback<List<OperatoerDTO>>(){

			@Override
			public void onFailure(Throwable caught) {
				Window.alert("Failed to acces database" + caught.getMessage());				
			}

			@Override
			public void onSuccess(List<OperatoerDTO> result) {
				txtBoxID.setText(""+(result.size()+1));


			}

		});

		ft.setWidget(1,0,txtBoxID);
		ft.setWidget(1,1,txtBoxNavn);
		ft.setWidget(1,2,txtBoxIni);
		ft.setWidget(1,3,txtBoxCPR);
		ft.setWidget(1,4,txtBoxPass);
		txtBoxActive.setText("1");
		ft.setWidget(1,5,txtBoxActive);

		Button btnADD = new Button("ADD", new ClickHandler(){
			@Override
			public void onClick(ClickEvent event) {

				try {
					if(boxCheck()){
						mainView.getService().createOperatoer(new OperatoerDTO(Integer.parseInt(txtBoxID.getText()), 
								txtBoxNavn.getText(), txtBoxIni.getText(), 
								txtBoxCPR.getText(), txtBoxPass.getText(),Integer.parseInt(txtBoxActive.getText())), new AsyncCallback<Void>() {


							@Override
							public void onFailure(Throwable caught) {
								Window.alert("Failed to acces database: " + caught.getMessage());		

							}

							@Override
							public void onSuccess(Void result) {
								Window.alert("Succes, the user has been added to the data base");

							}
						});
					}else{
						Window.alert("YOU WROTE SOMETHING WRONG IN A BOX! - try again!");
					}
				} catch (Exception e) {

					e.printStackTrace();
				}
			}

		});
		ft.setWidget(2, 0, btnADD);

	}

	protected boolean boxCheck() {
		if(txtBoxNavn.getText().length() >= 2 && txtBoxNavn.getText().length() <= 20){
			if(txtBoxIni.getText().length()< 4 && txtBoxIni.getText().length()> 1){
				if(txtBoxCPR.getText().length() == 10 &&txtBoxCPR.getText().matches("[0-9]+")){
					if(txtBoxPass.getText().length() == 7 || txtBoxPass.getText().length() == 8 ){
						return true;

					}else{
						Window.alert("Your password must be either 7 or 8 characters long.");
					}

				}else{
					Window.alert("Your CPR nr was not correct, must be 10 numbers long");
				}

			}else{
				Window.alert("your initials can only be 3 or 2 characters");
			}

		}else{
			Window.alert("your name was not over 2 chars long or below 20 chars");
		}

		return false;
	}

}
